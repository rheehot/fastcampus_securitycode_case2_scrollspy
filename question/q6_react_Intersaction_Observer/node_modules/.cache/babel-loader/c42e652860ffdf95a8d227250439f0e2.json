{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\fastcampus\\\\security_code\\\\ui-component\\\\case2_ScrollSpy\\\\question\\\\q6_react_Intersaction_Observer\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Nav from \"./Nav\";\nimport Content from \"./Content\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pages = Array.from({\n  length: 8\n}).map((_, i) => i + 1);\n\nconst App = () => {\n  _s();\n\n  const [viewIndex, setViewIndex] = useState(0);\n  const contentRef = useRef([]);\n\n  const moveToPage = index => () => {// do something\n  };\n\n  const scrollSpyObserver = new IntersectionObserver(entries => {// do something\n  }, {\n    root: null,\n    rootMargin: \"0px\",\n    threshold: 0.5\n  });\n  useEffect(() => {\n    contentRef.current.forEach(item => scrollSpyObserver.observe(item));\n    return () => {\n      contentRef.current.forEach(item => scrollSpyObserver.unobserve(item));\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      pages: pages,\n      viewIndex: viewIndex,\n      moveToPage: moveToPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"contents\",\n      children: pages.map((p, i) => /*#__PURE__*/_jsxDEV(Content, {\n        ref: r => contentRef.current[i] = r,\n        page: p\n      }, p, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"fqjoJrxLhL+iUVRci4udLwjOtTI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/study/fastcampus/security_code/ui-component/case2_ScrollSpy/question/q6_react_Intersaction_Observer/src/App.js"],"names":["React","useState","useRef","useEffect","Nav","Content","pages","Array","from","length","map","_","i","App","viewIndex","setViewIndex","contentRef","moveToPage","index","scrollSpyObserver","IntersectionObserver","entries","root","rootMargin","threshold","current","forEach","item","observe","unobserve","p","r"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAW;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAX,EAA0BC,GAA1B,CAA8B,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,GAAG,CAA5C,CAAd;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAMe,UAAU,GAAGd,MAAM,CAAC,EAAD,CAAzB;;AACA,QAAMe,UAAU,GAAGC,KAAK,IAAI,MAAM,CAChC;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAG,IAAIC,oBAAJ,CACxBC,OAAO,IAAI,CACT;AACD,GAHuB,EAIxB;AACEC,IAAAA,IAAI,EAAE,IADR;AAEEC,IAAAA,UAAU,EAAE,KAFd;AAGEC,IAAAA,SAAS,EAAE;AAHb,GAJwB,CAA1B;AAWArB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,UAAU,CAACS,OAAX,CAAmBC,OAAnB,CAA4BC,IAAD,IAAUR,iBAAiB,CAACS,OAAlB,CAA0BD,IAA1B,CAArC;AACA,WAAO,MAAM;AACXX,MAAAA,UAAU,CAACS,OAAX,CAAmBC,OAAnB,CAA4BC,IAAD,IAAUR,iBAAiB,CAACU,SAAlB,CAA4BF,IAA5B,CAArC;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,sBACE;AAAK,IAAA,EAAE,EAAC,KAAR;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,KAAK,EAAErB,KAAZ;AAAmB,MAAA,SAAS,EAAEQ,SAA9B;AAAyC,MAAA,UAAU,EAAEG;AAArD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA,gBACGX,KAAK,CAACI,GAAN,CAAU,CAACoB,CAAD,EAAIlB,CAAJ,kBACT,QAAC,OAAD;AAAiB,QAAA,GAAG,EAAGmB,CAAD,IAAQf,UAAU,CAACS,OAAX,CAAmBb,CAAnB,IAAwBmB,CAAtD;AAA0D,QAAA,IAAI,EAAED;AAAhE,SAAcA,CAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAnCD;;GAAMjB,G;;KAAAA,G;AAqCN,eAAeA,GAAf","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport Nav from \"./Nav\";\r\nimport Content from \"./Content\";\r\nimport \"./style.css\";\r\n\r\nconst pages = Array.from({ length: 8 }).map((_, i) => i + 1);\r\n\r\nconst App = () => {\r\n  const [viewIndex, setViewIndex] = useState(0);\r\n  const contentRef = useRef([]);\r\n  const moveToPage = index => () => {\r\n    // do something\r\n  };\r\n\r\n  const scrollSpyObserver = new IntersectionObserver(\r\n    entries => {\r\n      // do something\r\n    },\r\n    {\r\n      root: null,\r\n      rootMargin: \"0px\",\r\n      threshold: 0.5\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    contentRef.current.forEach((item) => scrollSpyObserver.observe(item));\r\n    return () => {\r\n      contentRef.current.forEach((item) => scrollSpyObserver.unobserve(item));\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"app\">\r\n      <Nav pages={pages} viewIndex={viewIndex} moveToPage={moveToPage} />\r\n      <div id=\"contents\">\r\n        {pages.map((p, i) => (\r\n          <Content key={p} ref={(r) => (contentRef.current[i] = r)} page={p} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}